/* FIR Filter verilog code */

module fir_filter ( 
    input wire clk, 
    input wire reset, 
    input wire signed [15:0] x,  // Input signal 
    output reg signed [31:0] y    // Output signal 
); 
 
parameter N = 5; // Number of taps 
reg signed [15:0] h [0:N-1]; // Coefficients 
reg signed [15:0] x_delay [0:N-1]; // Delay line 
integer i; 
 
// Initialize coefficients in an initial block 
initial begin 
    h[0] = 16'h0A; // Coefficient 0 
    h[1] = 16'h14; // Coefficient 1 
    h[2] = 16'h1E; // Coefficient 2 
    h[3] = 16'h14; // Coefficient 3 
    h[4] = 16'h0A; // Coefficient 4 
end 
 
// Shift register for delay line 
always @(posedge clk or posedge reset) begin 
    if (reset) begin 
        for (i = 0; i < N; i = i + 1) begin 
            x_delay[i] <= 16'h0; 
        end 
        y <= 32'h0; 
    end else begin 
        // Shift the input samples 
        for (i = N-1; i > 0; i = i - 1) begin 
            x_delay[i] <= x_delay[i - 1]; 
        end 
        x_delay[0] <= x; // New input sample 
 
        // Calculate the output 
        y <= 0; // Reset output 
        for (i = 0; i < N; i = i + 1) begin 
            y <= y + (h[i] * x_delay[i]); // Accumulate the products 
        end 
    end 
end 
 
endmodule 
